{"version":3,"file":"extension-crd-0.2.5.umd.min.js","mappings":"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","sources":["webpack://extension-crd-0.2.5/webpack/universalModuleDefinition","webpack://extension-crd-0.2.5/../../node_modules/@rancher/shell/config/types.js","webpack://extension-crd-0.2.5/../../node_modules/@rancher/shell/config/labels-annotations.js","webpack://extension-crd-0.2.5/../../node_modules/@rancher/shell/types/store/type-map.ts","webpack://extension-crd-0.2.5/../../node_modules/@rancher/shell/config/table-headers.js","webpack://extension-crd-0.2.5/../../node_modules/@rancher/shell/config/pagination-table-headers.js","webpack://extension-crd-0.2.5/./product.js","webpack://extension-crd-0.2.5/external umd {\"commonjs\":\"vue\",\"commonjs2\":\"vue\",\"root\":\"Vue\"}","webpack://extension-crd-0.2.5/webpack/bootstrap","webpack://extension-crd-0.2.5/webpack/runtime/define property getters","webpack://extension-crd-0.2.5/webpack/runtime/ensure chunk","webpack://extension-crd-0.2.5/webpack/runtime/get javascript chunk filename","webpack://extension-crd-0.2.5/webpack/runtime/hasOwnProperty shorthand","webpack://extension-crd-0.2.5/webpack/runtime/load script","webpack://extension-crd-0.2.5/webpack/runtime/make namespace object","webpack://extension-crd-0.2.5/webpack/runtime/publicPath","webpack://extension-crd-0.2.5/webpack/runtime/jsonp chunk loading","webpack://extension-crd-0.2.5/../../node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://extension-crd-0.2.5/./node_modules/@rancher/auto-import","webpack://extension-crd-0.2.5/./index.ts","webpack://extension-crd-0.2.5/../../node_modules/@vue/cli-service/lib/commands/build/entry-lib.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vue\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"extension-crd-0.2.5\"] = factory(require(\"vue\"));\n\telse\n\t\troot[\"extension-crd-0.2.5\"] = factory(root[\"Vue\"]);\n})((typeof self !== 'undefined' ? self : this), function(__WEBPACK_EXTERNAL_MODULE__274__) {\nreturn ","// --------------------------------------\n// 1. Provided by Steve and always potentially available\n// --------------------------------------\n\n// Steve-specific virtual types\n// Base: /v1\nexport const STEVE = {\n  PREFERENCE:        'userpreference',\n  SCHEMA_DEFINITION: 'schemaDefinition'\n};\n\n// Old APIs via Norman\n// Base: /v3\nexport const NORMAN = {\n  APP:                           'app',\n  AUTH_CONFIG:                   'authconfig',\n  CLUSTER:                       'cluster',\n  CLUSTER_TOKEN:                 'clusterregistrationtoken',\n  CLUSTER_ROLE_TEMPLATE_BINDING: 'clusterroletemplatebinding',\n  CLOUD_CREDENTIAL:              'cloudcredential',\n  FLEET_WORKSPACES:              'fleetworkspace',\n  GLOBAL_ROLE:                   'globalRole',\n  GLOBAL_ROLE_BINDING:           'globalRoleBinding',\n\n  NODE_POOL:                     'nodePool',\n  // Note - This allows access to node resources, not schema's or custom components (both are accessed via 'type' which clashes with kube node)\n  NODE:                          'node',\n  PRINCIPAL:                     'principal',\n  PROJECT:                       'project',\n  PROJECT_ROLE_TEMPLATE_BINDING: 'projectroletemplatebinding',\n  SETTING:                       'setting',\n  SPOOFED:                       { GROUP_PRINCIPAL: 'group.principal' },\n  ROLE_TEMPLATE:                 'roleTemplate',\n  TOKEN:                         'token',\n  USER:                          'user',\n  KONTAINER_DRIVER:              'kontainerDriver',\n  NODE_DRIVER:                   'nodeDriver'\n};\n\n// Public (via Norman)\n// Base: /v3-public\nexport const PUBLIC = { AUTH_PROVIDER: 'authprovider' };\n\n// Common native k8s types (via Steve)\n// Base: /k8s/clusters/<id>/v1/\nexport const API_GROUP = 'apiGroups';\nexport const API_SERVICE = 'apiregistration.k8s.io.apiservice';\nexport const CONFIG_MAP = 'configmap';\nexport const COUNT = 'count';\nexport const EVENT = 'event';\nexport const ENDPOINTS = 'endpoints';\nexport const HPA = 'autoscaling.horizontalpodautoscaler';\nexport const INGRESS = 'networking.k8s.io.ingress';\nexport const INGRESS_CLASS = 'networking.k8s.io.ingressclass';\nexport const LIMIT_RANGE = 'limitrange';\nexport const NAMESPACE = 'namespace';\nexport const NODE = 'node';\nexport const NETWORK_POLICY = 'networking.k8s.io.networkpolicy';\nexport const POD = 'pod';\nexport const POD_DISRUPTION_BUDGET = 'policy.poddisruptionbudget';\nexport const PV = 'persistentvolume';\nexport const PVC = 'persistentvolumeclaim';\nexport const RESOURCE_QUOTA = 'resourcequota';\nexport const SCHEMA = 'schema';\nexport const SERVICE = 'service';\nexport const SECRET = 'secret';\nexport const SERVICE_ACCOUNT = 'serviceaccount';\nexport const STORAGE_CLASS = 'storage.k8s.io.storageclass';\nexport const CSI_DRIVER = 'storage.k8s.io.csidriver';\nexport const OBJECT_META = 'io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta';\nexport const NETWORK_ATTACHMENT = 'k8s.cni.cncf.io.networkattachmentdefinition';\nexport const USER = 'user';\nexport const GROUP = 'group';\n\nexport const RBAC = {\n  ROLE:                 'rbac.authorization.k8s.io.role',\n  CLUSTER_ROLE:         'rbac.authorization.k8s.io.clusterrole',\n  ROLE_BINDING:         'rbac.authorization.k8s.io.rolebinding',\n  CLUSTER_ROLE_BINDING: 'rbac.authorization.k8s.io.clusterrolebinding',\n};\n\nexport const WORKLOAD = 'workload';\n\n// The types that are aggregated into a \"workload\"\nexport const WORKLOAD_TYPES = {\n  DEPLOYMENT:             'apps.deployment',\n  CRON_JOB:               'batch.cronjob',\n  DAEMON_SET:             'apps.daemonset',\n  JOB:                    'batch.job',\n  STATEFUL_SET:           'apps.statefulset',\n  REPLICA_SET:            'apps.replicaset',\n  REPLICATION_CONTROLLER: 'replicationcontroller',\n};\n\nexport const WORKLOAD_TYPE_TO_KIND_MAPPING = {\n  // Each deployment creates a replicaset and the metrics are published for a replicaset.\n  [WORKLOAD_TYPES.DEPLOYMENT]:             'ReplicaSet',\n  [WORKLOAD_TYPES.CRON_JOB]:               'CronJob',\n  [WORKLOAD_TYPES.DAEMON_SET]:             'DaemonSet',\n  [WORKLOAD_TYPES.JOB]:                    'Job',\n  [WORKLOAD_TYPES.STATEFUL_SET]:           'StatefulSet',\n  [WORKLOAD_TYPES.REPLICA_SET]:            'ReplicaSet',\n  [WORKLOAD_TYPES.REPLICATION_CONTROLLER]: 'ReplicationController',\n};\n\nexport const METRICS_SUPPORTED_KINDS = [\n  WORKLOAD_TYPES.DAEMON_SET,\n  WORKLOAD_TYPES.REPLICA_SET,\n  WORKLOAD_TYPES.STATEFUL_SET,\n  WORKLOAD_TYPES.DEPLOYMENT\n];\n\nconst {\n  DAEMON_SET, CRON_JOB, JOB, ...scalableWorkloads\n} = WORKLOAD_TYPES;\n\nexport const SCALABLE_WORKLOAD_TYPES = scalableWorkloads;\n\nexport const LIST_WORKLOAD_TYPES = {\n  ...WORKLOAD_TYPES,\n  POD\n};\n\nexport const METRIC = {\n  NODE: 'metrics.k8s.io.nodemetrics',\n  POD:  'metrics.k8s.io.podmetrics',\n};\n\nexport const CATALOG = {\n  CLUSTER_REPO: 'catalog.cattle.io.clusterrepo',\n  OPERATION:    'catalog.cattle.io.operation',\n  APP:          'catalog.cattle.io.app',\n  REPO:         'catalog.cattle.io.repo',\n};\n\n// Charts/Apps\nexport const CATALOG_SORT_OPTIONS = {\n  RECOMMENDED:       'recommended',\n  LAST_UPDATED_DESC: 'lastupdatedDescending',\n  ALPHABETICAL_ASC:  'alphaAscending',\n  ALPHABETICAL_DESC: 'alphaDescending'\n};\n\n// UI Plugin type\nexport const UI_PLUGIN = 'catalog.cattle.io.uiplugin';\n\nexport const HELM = { PROJECTHELMCHART: 'helm.cattle.io.projecthelmchart' };\n\nexport const MONITORING = {\n  ALERTMANAGER:       'monitoring.coreos.com.alertmanager',\n  ALERTMANAGERCONFIG: 'monitoring.coreos.com.alertmanagerconfig',\n  PODMONITOR:         'monitoring.coreos.com.podmonitor',\n  PROMETHEUS:         'monitoring.coreos.com.prometheus',\n  PROMETHEUSRULE:     'monitoring.coreos.com.prometheusrule',\n  SERVICEMONITOR:     'monitoring.coreos.com.servicemonitor',\n  THANOSRULER:        'monitoring.coreos.com.thanosruler',\n  SPOOFED:            {\n    RECEIVER:             'monitoring.coreos.com.receiver',\n    RECEIVER_SPEC:        'monitoring.coreos.com.receiver.spec',\n    RECEIVER_EMAIL:       'monitoring.coreos.com.receiver.email',\n    RECEIVER_SLACK:       'monitoring.coreos.com.receiver.slack',\n    RECEIVER_WEBHOOK:     'monitoring.coreos.com.receiver.webhook',\n    RECEIVER_PAGERDUTY:   'monitoring.coreos.com.receiver.pagerduty',\n    RECEIVER_OPSGENIE:    'monitoring.coreos.com.receiver.opsgenie',\n    RECEIVER_HTTP_CONFIG: 'monitoring.coreos.com.receiver.httpconfig',\n    RESPONDER:            'monitoring.coreos.com.receiver.responder',\n    ROUTE:                'monitoring.coreos.com.route',\n    ROUTE_SPEC:           'monitoring.coreos.com.route.spec',\n  }\n};\n\nexport const LONGHORN = {\n  ENGINES:       'longhorn.io.engine',\n  ENGINE_IMAGES: 'longhorn.io.engineimage',\n  NODES:         'longhorn.io.node',\n  REPLICAS:      'longhorn.io.replica',\n  SETTINGS:      'longhorn.io.setting',\n  VOLUMES:       'longhorn.io.volume',\n};\n\nexport const LONGHORN_DRIVER = 'driver.longhorn.io';\nexport const LONGHORN_VERSION_V1 = 'LonghornV1';\nexport const LONGHORN_VERSION_V2 = 'LonghornV2';\n\nexport const SNAPSHOT = 'rke.cattle.io.etcdsnapshot';\n\n// --------------------------------------\n// 2. Only if Rancher is installed\n// --------------------------------------\n\n// Rancher Management API (via Steve)\n// Base: /v1\nexport const MANAGEMENT = {\n  AUTH_CONFIG:                   'management.cattle.io.authconfig',\n  CATALOG_TEMPLATE:              'management.cattle.io.catalogtemplate',\n  // CATALOG:                       'management.cattle.io.catalog',\n  CLUSTER:                       'management.cattle.io.cluster',\n  CLUSTER_ROLE_TEMPLATE_BINDING: 'management.cattle.io.clusterroletemplatebinding',\n  FEATURE:                       'management.cattle.io.feature',\n  // GROUP:                         'management.cattle.io.group',\n  KONTAINER_DRIVER:              'management.cattle.io.kontainerdriver',\n  MULTI_CLUSTER_APP:             'management.cattle.io.multiclusterapp',\n  NODE:                          'management.cattle.io.node',\n  NODE_DRIVER:                   'management.cattle.io.nodedriver',\n  NODE_POOL:                     'management.cattle.io.nodepool',\n  NODE_TEMPLATE:                 'management.cattle.io.nodetemplate',\n  PROJECT:                       'management.cattle.io.project',\n  PROJECT_ROLE_TEMPLATE_BINDING: 'management.cattle.io.projectroletemplatebinding',\n  ROLE_TEMPLATE:                 'management.cattle.io.roletemplate',\n  SETTING:                       'management.cattle.io.setting',\n  USER:                          'management.cattle.io.user',\n  TOKEN:                         'management.cattle.io.token',\n  GLOBAL_ROLE:                   'management.cattle.io.globalrole',\n  GLOBAL_ROLE_BINDING:           'management.cattle.io.globalrolebinding',\n  PSA:                           'management.cattle.io.podsecurityadmissionconfigurationtemplate',\n  MANAGED_CHART:                 'management.cattle.io.managedchart',\n  USER_NOTIFICATION:             'management.cattle.io.rancherusernotification',\n  GLOBAL_DNS_PROVIDER:           'management.cattle.io.globaldnsprovider',\n  RKE_TEMPLATE:                  'management.cattle.io.clustertemplate',\n  RKE_TEMPLATE_REVISION:         'management.cattle.io.clustertemplaterevision',\n  CLUSTER_PROXY_CONFIG:          'management.cattle.io.clusterproxyconfig',\n  OIDC_CLIENT:                   'management.cattle.io.oidcclient'\n};\n\nexport const CAPI = {\n  CAPI_CLUSTER:         'cluster.x-k8s.io.cluster',\n  MACHINE_DEPLOYMENT:   'cluster.x-k8s.io.machinedeployment',\n  MACHINE_SET:          'cluster.x-k8s.io.machineset',\n  MACHINE:              'cluster.x-k8s.io.machine',\n  RANCHER_CLUSTER:      'provisioning.cattle.io.cluster',\n  MACHINE_CONFIG_GROUP: 'rke-machine-config.cattle.io',\n};\n\n// --------------------------------------\n// 3. Optional add-on packages in a cluster\n// --------------------------------------\n// Base: /k8s/clusters/<id>/v1/\n\nexport const FLEET = {\n  APPLICATION:              'fleet.cattle.io.application',\n  BUNDLE:                   'fleet.cattle.io.bundle',\n  BUNDLE_DEPLOYMENT:        'fleet.cattle.io.bundledeployment',\n  CLUSTER:                  'fleet.cattle.io.cluster',\n  CLUSTER_GROUP:            'fleet.cattle.io.clustergroup',\n  DASHBOARD:                'fleet.cattle.io.dashboard',\n  GIT_REPO:                 'fleet.cattle.io.gitrepo',\n  HELM_OP:                  'fleet.cattle.io.helmop',\n  WORKSPACE:                'management.cattle.io.fleetworkspace',\n  TOKEN:                    'fleet.cattle.io.clusterregistrationtoken',\n  BUNDLE_NAMESPACE_MAPPING: 'fleet.cattle.io.bundlenamespacemapping',\n  GIT_REPO_RESTRICTION:     'fleet.cattle.io.gitreporestriction'\n};\n\nexport const GATEKEEPER = {\n  CONSTRAINT_TEMPLATE: 'templates.gatekeeper.sh.constrainttemplate',\n  SPOOFED:             { CONSTRAINT: 'constraints.gatekeeper.sh.constraint' }\n};\n\nexport const ISTIO = {\n  VIRTUAL_SERVICE:  'networking.istio.io.virtualservice',\n  DESTINATION_RULE: 'networking.istio.io.destinationrule',\n  GATEWAY:          'networking.istio.io.gateway'\n};\n\nexport const LOGGING = {\n  // LOGGING:        'logging.banzaicloud.io.logging',\n  CLUSTER_FLOW:   'logging.banzaicloud.io.clusterflow',\n  CLUSTER_OUTPUT: 'logging.banzaicloud.io.clusteroutput',\n  FLOW:           'logging.banzaicloud.io.flow',\n  OUTPUT:         'logging.banzaicloud.io.output',\n  SPOOFED:        {\n    FILTERS:            'logging.banzaicloud.io.output.filters',\n    FILTER:             'logging.banzaicloud.io.output.filter',\n    CONCAT:             'logging.banzaicloud.io.output.filters.concat',\n    DEDOT:              'logging.banzaicloud.io.output.filters.dedot',\n    DETECTEXCEPTIONS:   'logging.banzaicloud.io.output.filters.detectExceptions',\n    GEOIP:              'logging.banzaicloud.io.output.filters.geoip',\n    GREP:               'logging.banzaicloud.io.output.filters.grep',\n    PARSER:             'logging.banzaicloud.io.output.filters.parser',\n    PROMETHEUS:         'logging.banzaicloud.io.output.filters.prometheus',\n    RECORD_MODIFIER:    'logging.banzaicloud.io.output.filters.record_modifier',\n    RECORD_TRANSFORMER: 'logging.banzaicloud.io.output.filters.record_transformer',\n    STDOUT:             'logging.banzaicloud.io.output.filters.stdout',\n    SUMOLOGIC:          'logging.banzaicloud.io.output.filters.sumologic',\n    TAG_NORMALISER:     'logging.banzaicloud.io.output.filters.tag_normaliser',\n    THROTTLE:           'logging.banzaicloud.io.output.filters.throttle',\n    RECORD:             'logging.banzaicloud.io.output.filters.record',\n    REGEXPSECTION:      'logging.banzaicloud.io.output.filters.regexpsection',\n    EXCLUDESECTION:     'logging.banzaicloud.io.output.filters.excludesection',\n    ORSECTION:          'logging.banzaicloud.io.output.filters.orsection',\n    ANDSECTION:         'logging.banzaicloud.io.output.filters.andsection',\n    PARSESECTION:       'logging.banzaicloud.io.output.filters.parsesection',\n    METRICSECTION:      'logging.banzaicloud.io.output.filters.metricsection',\n    REPLACE:            'logging.banzaicloud.io.output.filters.replace',\n    SINGLEPARSESECTION: 'logging.banzaicloud.io.output.filters.replace.singleparsesection'\n  }\n};\n\nexport const BACKUP_RESTORE = {\n  RESOURCE_SET: 'resources.cattle.io.resourceset',\n  BACKUP:       'resources.cattle.io.backup',\n  RESTORE:      'resources.cattle.io.restore',\n};\n\nexport const COMPLIANCE = {\n  CLUSTER_SCAN:         'compliance.cattle.io.clusterscan',\n  CLUSTER_SCAN_PROFILE: 'compliance.cattle.io.clusterscanprofile',\n  BENCHMARK:            'compliance.cattle.io.clusterscanbenchmark',\n  REPORT:               'compliance.cattle.io.clusterscanreport'\n};\n\nexport const UI = { NAV_LINK: 'ui.cattle.io.navlink' };\n\nexport const VIRTUAL_TYPES = {\n  CLUSTER_MEMBERS:    'cluster-members',\n  PROJECT_NAMESPACES: 'projects-namespaces',\n  NAMESPACES:         'namespaces',\n  PROJECT_SECRETS:    'projectsecret',\n  JWT_AUTHENTICATION: 'jwt.authentication'\n};\n\n// harvester\nexport const HCI = {\n  CLUSTER:          'harvesterhci.io.management.cluster',\n  DASHBOARD:        'harvesterhci.io.dashboard',\n  IMAGE:            'harvesterhci.io.virtualmachineimage',\n  VGPU_DEVICE:      'devices.harvesterhci.io.vgpudevice',\n  SETTING:          'harvesterhci.io.setting',\n  RESOURCE_QUOTA:   'harvesterhci.io.resourcequota',\n  HARVESTER_CONFIG: 'rke-machine-config.cattle.io.harvesterconfig',\n};\n\nexport const VIRTUAL_HARVESTER_PROVIDER = 'harvester';\n\nexport const ADDRESSES = {\n  HOSTNAME:    'Hostname',\n  INTERNAL_IP: 'InternalIP',\n  EXTERNAL_IP: 'ExternalIP'\n};\n\nexport const DEFAULT_WORKSPACE = 'fleet-default';\n\nexport const AUTH_TYPE = {\n  _NONE:  '_none',\n  _BASIC: '_basic',\n  _SSH:   '_ssh',\n  _S3:    '_S3',\n  _RKE:   '_RKE',\n};\n\nexport const LOCAL_CLUSTER = 'local';\n\nexport const CLUSTER_REPO_TYPES = {\n  HELM_URL: 'helm-url',\n  GIT_REPO: 'git-repo',\n  OCI_URL:  'oci-url'\n};\n\nexport const ZERO_TIME = '0001-01-01T00:00:00Z';\n\nexport const DEFAULT_GRAFANA_STORAGE_SIZE = '10Gi';\n\nexport const DEPRECATED = 'Deprecated';\nexport const EXPERIMENTAL = 'Experimental';\n","export const NORMAN_NAME = 'field.cattle.io/name';\nexport const DESCRIPTION = 'field.cattle.io/description';\nexport const HOSTNAME = 'kubernetes.io/hostname';\nexport const TIMESTAMP = 'cattle.io/timestamp';\nexport const SYSTEM_NAMESPACE = 'management.cattle.io/system-namespace';\nexport const PROJECT = 'field.cattle.io/projectId';\nexport const DEFAULT_PROJECT = 'authz.management.cattle.io/default-project';\nexport const SYSTEM_PROJECT = 'authz.management.cattle.io/system-project';\nexport const CONTAINER_DEFAULT_RESOURCE_LIMIT = 'field.cattle.io/containerDefaultResourceLimit';\nexport const CATTLE_PUBLIC_ENDPOINTS = 'field.cattle.io/publicEndpoints';\nexport const TARGET_WORKLOADS = 'field.cattle.io/targetWorkloadIds';\nexport const UI_MANAGED = 'management.cattle.io/ui-managed';\nexport const CREATOR_ID = 'field.cattle.io/creatorId';\nexport const CREATOR_PRINCIPAL_ID = 'field.cattle.io/creator-principal-name';\nexport const RESOURCE_QUOTA = 'field.cattle.io/resourceQuota';\nexport const AZURE_MIGRATED = 'auth.cattle.io/azuread-endpoint-migrated';\nexport const WORKSPACE_ANNOTATION = 'objectset.rio.cattle.io/id';\nexport const NODE_ARCHITECTURE = 'kubernetes.io/arch';\nexport const IMPORTED_CLUSTER_VERSION_MANAGEMENT = 'rancher.io/imported-cluster-version-management';\nexport const UI_PROJECT_SECRET = 'management.cattle.io/project-scoped-secret';\nexport const UI_PROJECT_SECRET_COPY = 'management.cattle.io/project-scoped-secret-copy';\n\nexport const KUBERNETES = {\n  SERVICE_ACCOUNT_UID:  'kubernetes.io/service-account.uid',\n  SERVICE_ACCOUNT_NAME: 'kubernetes.io/service-account.name',\n  MANAGED_BY:           'app.kubernetes.io/managed-by',\n  MANAGED_NAME:         'app.kubernetes.io/name',\n  INSTANCE:             'app.kubernetes.io/instance',\n};\n\nexport const CERTMANAGER = { ISSUER: 'cert-manager.io/issuer-name' };\n\nexport const STORAGE = {\n  DEFAULT_STORAGE_CLASS:      'storageclass.kubernetes.io/is-default-class',\n  BETA_DEFAULT_STORAGE_CLASS: 'storageclass.beta.kubernetes.io/is-default-class'\n};\n\nexport const MANAGEMENT_NODE = { NODE_NAME: 'management.cattle.io/nodename' };\n\nexport const NODE_ROLES = {\n  CONTROL_PLANE_OLD: 'node-role.kubernetes.io/controlplane',\n  CONTROL_PLANE:     'node-role.kubernetes.io/control-plane',\n  WORKER:            'node-role.kubernetes.io/worker',\n  ETCD:              'node-role.kubernetes.io/etcd',\n};\n\nexport const MACHINE_ROLES = {\n  CONTROL_PLANE: 'rke.cattle.io/control-plane-role',\n  WORKER:        'rke.cattle.io/worker-role',\n  ETCD:          'rke.cattle.io/etcd-role',\n};\n\nexport const CAPI = {\n  DEPLOYMENT_NAME:      'cluster.x-k8s.io/deployment-name',\n  CREDENTIAL_DRIVER:    'provisioning.cattle.io/driver',\n  CLUSTER_NAMESPACE:    'cluster.x-k8s.io/cluster-namespace',\n  FORCE_MACHINE_REMOVE: 'provisioning.cattle.io/force-machine-remove',\n  MACHINE_NAME:         'cluster.x-k8s.io/machine',\n  DELETE_MACHINE:       'cluster.x-k8s.io/delete-machine',\n  PROVIDER:             'provider.cattle.io',\n  /**\n   * RKE2 - metadata.name is human name\n   * RKE1 and some others - metadata.name is v1 mgmt id and it's the v1 mgmt cluster that contains human name\n   * This label ensures something is in the v1 prov cluster that can be sorted/filtered on\n   */\n  HUMAN_NAME:           'provisioning.cattle.io/management-cluster-display-name',\n  SECRET_AUTH:          'v2prov-secret-authorized-for-cluster',\n  SECRET_WILL_DELETE:   'v2prov-authorized-secret-deletes-on-cluster-removal',\n  /**\n   * Annotation for overriding the cluster provider,\n   */\n  UI_CUSTOM_PROVIDER:   'ui.rancher/provider'\n};\n\nexport const CATALOG = {\n  CERTIFIED: 'catalog.cattle.io/certified',\n  _RANCHER:  'rancher',\n  _PARTNER:  'partner',\n  _OTHER:    'other',\n\n  EXPERIMENTAL: 'catalog.cattle.io/experimental',\n  NAMESPACE:    'catalog.cattle.io/namespace',\n  RELEASE_NAME: 'catalog.cattle.io/release-name',\n  FEATURED:     'catalog.cattle.io/featured',\n\n  REQUIRES_GVK:     'catalog.cattle.io/requires-gvr',\n  PROVIDES:         'catalog.cattle.io/provides-gvr',\n  AUTO_INSTALL_GVK: 'catalog.cattle.io/auto-install-gvr',\n  AUTO_INSTALL:     'catalog.cattle.io/auto-install',\n  HIDDEN:           'catalog.cattle.io/hidden',\n  REQUESTS_CPU:     'catalog.cattle.io/requests-cpu',\n  REQUESTS_MEMORY:  'catalog.cattle.io/requests-memory',\n\n  SCOPE:       'catalog.cattle.io/scope',\n  _MANAGEMENT: 'management',\n  _DOWNSTREAM: 'downstream',\n\n  TYPE:          'catalog.cattle.io/type',\n  _APP:          'app',\n  _CLUSTER_TPL:  'cluster-template',\n  _CLUSTER_TOOL: 'cluster-tool',\n\n  COMPONENT:         'catalog.cattle.io/ui-component',\n  SOURCE_REPO_TYPE:  'catalog.cattle.io/ui-source-repo-type',\n  SOURCE_REPO_NAME:  'catalog.cattle.io/ui-source-repo',\n  COLOR:             'catalog.cattle.io/ui-color',\n  DISPLAY_NAME:      'catalog.cattle.io/display-name',\n  CLUSTER_REPO_NAME: 'catalog.cattle.io/cluster-repo-name',\n\n  SUPPORTED_OS: 'catalog.cattle.io/os',\n  PERMITTED_OS: 'catalog.cattle.io/permits-os',\n  DEPLOYED_OS:  'catalog.cattle.io/deploys-on-os',\n\n  MIGRATED: 'apps.cattle.io/migrated',\n  MANAGED:  'catalog.cattle.io/managed',\n\n  HIDDEN_REPO: 'clusterrepo.cattle.io/hidden'\n};\n\nexport const FLEET = {\n  REPO_NAME:                    'fleet.cattle.io/repo-name',\n  HELM_NAME:                    'fleet.cattle.io/fleet-helm-name',\n  CLUSTER_DISPLAY_NAME:         'management.cattle.io/cluster-display-name',\n  CLUSTER_NAME:                 'management.cattle.io/cluster-name',\n  BUNDLE_ID:                    'fleet.cattle.io/bundle-id',\n  BUNDLE_NAME:                  'fleet.cattle.io/bundle-name',\n  BUNDLE_NAMESPACE:             'fleet.cattle.io/bundle-namespace',\n  MANAGED:                      'fleet.cattle.io/managed',\n  CLUSTER_NAMESPACE:            'fleet.cattle.io/cluster-namespace',\n  CLUSTER:                      'fleet.cattle.io/cluster',\n  CREATED_BY_USER_ID:           'fleet.cattle.io/created-by-user-id',\n  OCI_STORAGE_SECRET_DEFAULT:   'ui-default-oci-registry',\n  OCI_STORAGE_SECRET_GENERATED: 'fleet.cattle.io/bundle-internal-secret',\n};\n\nexport const RBAC = { PRODUCT: 'management.cattle.io/ui-product' };\n\nexport const RKE = { EXTERNAL_IP: 'rke.cattle.io/external-ip' };\n\nexport const SNAPSHOT = { CLUSTER_NAME: 'rke.cattle.io/cluster-name' };\n\nexport const ISTIO = { AUTO_INJECTION: 'istio-injection' };\n\nconst CATTLE_REGEX = /cattle\\.io\\//;\n\nexport const LABELS_TO_IGNORE_REGEX = [\n  CATTLE_REGEX\n];\n\nexport const ANNOTATIONS_TO_IGNORE_REGEX = [\n  CATTLE_REGEX\n];\n\nexport const ANNOTATIONS_TO_FOLD = [\n  /^kubectl\\.kubernetes\\.io\\/.*$/,\n  /^objectset\\.rio\\.cattle\\.io\\/.*$/,\n];\n\nexport const HCI = {\n  CLOUD_INIT:          'harvesterhci.io/cloud-init-template',\n  CLOUD_PROVIDER_IPAM: 'cloudprovider.harvesterhci.io/ipam',\n  NETWORK_ROUTE:       'network.harvesterhci.io/route',\n  IMAGE_NAME:          'harvesterhci.io/image-name',\n  NETWORK_TYPE:        'network.harvesterhci.io/type',\n  CLUSTER_NETWORK:     'network.harvesterhci.io/clusternetwork',\n  PRIMARY_SERVICE:     'cloudprovider.harvesterhci.io/primary-service',\n  CPU_MANAGER:         'cpumanager',\n};\n\n// Annotations that can be on management.cattle.io.cluster to configure a custom badge\n// Can't use ui.cattle.io - it seems to strip these out - so using io.rancher\nexport const CLUSTER_BADGE = {\n  // Badge text - badge is only shown if badge text is not empty\n  TEXT:      'ui.rancher/badge-text',\n  // Badge color - as a hex color - e.g. #ff00ff\n  COLOR:     'ui.rancher/badge-color',\n  // Custom icon text - max 3 characters\n  ICON_TEXT: 'ui.rancher/badge-icon-text',\n};\n\nexport const SYSTEM_LABELS = [\n  'io.cattle.lifecycle.',\n  'beta.kubernetes.io',\n  'failure-domain.beta.kubernetes.io',\n  'node-role.kubernetes.io',\n  'kubernetes.io',\n  'cattle.io',\n  'authz.management.cattle.io',\n  'rke.cattle.io',\n  'field.cattle.io',\n  'workload.user.cattle.io',\n  'k3s.io',\n  'node.kubernetes.io',\n  'egress.rke2.io'\n];\n\nexport const OIDC_CLIENT_SECRET_ANNOTATIONS = {\n  CREATE: 'cattle.io/oidc-client-secret-create',\n  REGEN:  'cattle.io/oidc-client-secret-regenerate',\n  REMOVE: 'cattle.io/oidc-client-secret-remove',\n};\n","\n/**\n * interface for type-map's' definition for table headers/columns\n */\nexport interface TableColumn {\n  name: string,\n  label?: string,\n  value: any,\n  sort?: string | string[],\n  formatter?: string,\n  formatterOpts?: any,\n  width?: number,\n  tooltip?: string,\n  search?: string | boolean,\n}\n\nexport const COLUMN_BREAKPOINTS = {\n  /**\n   * Only show column if at tablet width or wider\n   */\n  TABLET:  'tablet',\n  /**\n   * Only show column if at laptop width or wider\n   */\n  LAPTOP:  'laptop',\n  /**\n   * Only show column if at desktop width or wider\n   */\n  DESKTOP: 'desktop'\n};\n","import { CATTLE_PUBLIC_ENDPOINTS, UI_PROJECT_SECRET_COPY } from '@shell/config/labels-annotations';\nimport { NODE as NODE_TYPE } from '@shell/config/types';\nimport { COLUMN_BREAKPOINTS } from '@shell/types/store/type-map';\n\n// Note: 'id' is always the last sort, so you don't have to specify it here.\n\nexport const STATE = {\n  name:      'state',\n  labelKey:  'tableHeaders.state',\n  sort:      ['stateSort', 'nameSort'],\n  value:     'stateDisplay',\n  getValue:  (row) => row.stateDisplay,\n  width:     100,\n  default:   'unknown',\n  formatter: 'BadgeStateFormatter',\n};\n\nexport const USER_STATE = {\n  name:      'user-state',\n  labelKey:  'tableHeaders.userState',\n  sort:      ['stateSort', 'nameSort'],\n  value:     'stateDisplay',\n  getValue:  (row) => row.stateDisplay,\n  width:     72,\n  default:   'unknown',\n  formatter: 'BadgeStateFormatter',\n};\n\nexport const DOWNLOAD = {\n  name:          'download',\n  labelKey:      'tableHeaders.download',\n  value:         'download',\n  canBeVariable: true,\n  align:         'right',\n};\n\n// This header is used for nodes in\n// both Cluster Explorer and Cluster Management.\nexport const INTERNAL_EXTERNAL_IP = {\n  // @TODO this is called internal/external but displays external/internal (╯°□°)╯︵ ┻━┻\n  name:      'internal-external-ip',\n  labelKey:  'tableHeaders.internalExternalIp',\n  search:    ['externalIp', 'internalIp'],\n  sort:      ['externalIp', 'internalIp'],\n  formatter: 'InternalExternalIP'\n};\n\nexport const NAME = {\n  name:          'name',\n  labelKey:      'tableHeaders.name',\n  value:         'nameDisplay',\n  getValue:      (row) => row.nameDisplay,\n  sort:          ['nameSort'],\n  formatter:     'LinkDetail',\n  canBeVariable: true,\n};\n\nexport const LOGGING_OUTPUT_PROVIDERS = {\n  name:      'logging-output-providers',\n  labelKey:  'tableHeaders.loggingOutputProviders',\n  value:     'providersDisplay',\n  sort:      ['providersSortable'],\n  formatter: 'List',\n};\n\nexport const SIMPLE_NAME = {\n  name:          'name',\n  labelKey:      'tableHeaders.simpleName',\n  value:         'name',\n  sort:          ['name'],\n  width:         200,\n  canBeVariable: true,\n};\n\nexport const EFFECT = {\n  name:     'effect',\n  labelKey: 'tableHeaders.effect',\n  value:    'effect',\n  sort:     ['effect'],\n};\n\nexport const STORAGE_CLASS_PROVISIONER = {\n  name:     'storage_class_provisioner',\n  labelKey: 'tableHeaders.storage_class_provisioner',\n  value:    'provisionerListDisplay',\n  sort:     ['provisioner'],\n};\n\nexport const STORAGE_CLASS_DEFAULT = {\n  name:      'storage_class_default',\n  labelKey:  'tableHeaders.default',\n  value:     'isDefault',\n  sort:      ['isDefault'],\n  formatter: 'Checked',\n};\n\n/**\n * spec.csi.driver OR spec[known driver type]\n */\nexport const PERSISTENT_VOLUME_SOURCE = {\n  name:     'persistent_volume_source',\n  labelKey: 'tableHeaders.persistentVolumeSource',\n  value:    'source',\n  sort:     ['provisioner'],\n};\n\n/**\n * Link to the PVC associated with PV\n */\nexport const PERSISTENT_VOLUME_CLAIM = {\n  name:          'persistent-volume-claim',\n  labelKey:      'tableHeaders.persistentVolumeClaim',\n  sort:          ['claimName'],\n  value:         'claimName',\n  formatter:     'LinkDetail',\n  formatterOpts: { reference: 'claim.detailLocation' }\n};\n\nexport const OUTPUT = {\n  name:          'localOutputRefs',\n  labelKey:      'tableHeaders.output',\n  value:         'outputs',\n  sort:          ['outputsSortable'],\n  formatter:     'ListLink',\n  formatterOpts: { options: { internal: true } },\n};\n\nexport const CONFIGURED_PROVIDERS = {\n  name:      'providers',\n  labelKey:  'tableHeaders.providers',\n  value:     'providersDisplay',\n  sort:      'providersSortable',\n  formatter: 'List'\n};\n\nexport const CLUSTER_OUTPUT = {\n  ...OUTPUT,\n  name:     'globalOutputRefs',\n  value:    'clusterOutputs',\n  sort:     ['clusterOutputsSortable'],\n  labelKey: 'tableHeaders.clusterOutput',\n};\n\nexport const ID_UNLINKED = {\n  name:          'id',\n  labelKey:      'tableHeaders.id',\n  value:         'id',\n  sort:          ['id'],\n  canBeVariable: true,\n};\n\nexport const NAME_UNLINKED = {\n  name:          'name',\n  labelKey:      'tableHeaders.nameUnlinked',\n  value:         'nameDisplay',\n  sort:          ['nameSort'],\n  canBeVariable: true,\n};\n\nexport const NAMESPACE = {\n  name:        'namespace',\n  labelKey:    'tableHeaders.namespace',\n  value:       'namespace',\n  getValue:    (row) => row.namespace,\n  sort:        'namespace',\n  dashIfEmpty: true,\n};\n\nexport const NODE = {\n  name:          'node',\n  labelKey:      'tableHeaders.node',\n  value:         'spec.nodeName',\n  getValue:      (row) => row.spec?.nodeName,\n  sort:          'spec.nodeName',\n  formatter:     'LinkName',\n  formatterOpts: { type: NODE_TYPE },\n};\n\nexport const NODE_NAME = {\n  name:      'nodeName',\n  labelKey:  'tableHeaders.nodeName',\n  sort:      'name',\n  value:     'name',\n  getValue:  (row) => row.name,\n  formatter: 'LinkDetail',\n};\n\nexport const ROLES = {\n  name:     'roles',\n  labelKey: 'tableHeaders.roles',\n  sort:     'roles',\n  value:    'roles'\n};\n\nexport const VERSION = {\n  name:     'version',\n  labelKey: 'tableHeaders.version',\n  sort:     'version',\n  value:    'version',\n  getValue: (row) => row.version\n};\n\nexport const CPU = {\n  name:      'cpu',\n  labelKey:  'tableHeaders.cpu',\n  sort:      'cpuUsage',\n  search:    false,\n  value:     'cpuUsagePercentage',\n  formatter: 'PercentageBar',\n  width:     120,\n};\n\nexport const RAM = {\n  name:      'ram',\n  labelKey:  'tableHeaders.ram',\n  sort:      'ramUsage',\n  search:    false,\n  value:     'ramUsagePercentage',\n  formatter: 'PercentageBar',\n  width:     120,\n};\n\nexport const PRINCIPAL = {\n  name:      'principal',\n  labelKey:  'tableHeaders.name',\n  sort:      'principal.loginName',\n  value:     'principalId',\n  formatter: 'Principal',\n};\n\nexport const PODS = {\n  name:      'pods',\n  labelKey:  'tableHeaders.pods',\n  sort:      'podConsumed',\n  search:    false,\n  value:     (row) => row.podConsumedUsage,\n  formatter: 'PercentageBar',\n  width:     120,\n};\n\nexport const AGE = {\n  name:      'age',\n  labelKey:  'tableHeaders.age',\n  value:     'creationTimestamp',\n  getValue:  (row) => row.creationTimestamp,\n  sort:      'creationTimestamp:desc',\n  search:    false,\n  formatter: 'LiveDate',\n  width:     100,\n  align:     'left'\n};\n\nexport const AGE_NORMAN = {\n  ...AGE,\n  getValue: (row) => row.created,\n  value:    'created',\n  sort:     'created:desc',\n};\n\nexport const CREATION_DATE = {\n  name:      'date',\n  labelKey:  'tableHeaders.date',\n  value:     'metadata.creationTimestamp',\n  sort:      ['date'],\n  formatter: 'Date'\n};\n\nexport const DESCRIPTION = {\n  name:      'description',\n  labelKey:  'tableHeaders.description',\n  align:     'left',\n  value:     'description',\n  sort:      ['description'],\n  formatter: 'Description',\n  width:     300,\n};\n\nexport const NS_SNAPSHOT_QUOTA = {\n  name:          'NamespaceSnapshotQuota',\n  labelKey:      'harvester.tableHeaders.totalSnapshotQuota',\n  value:         'snapshotSizeQuota',\n  sort:          'snapshotSizeQuota',\n  align:         'center',\n  formatter:     'Si',\n  formatterOpts: {\n    opts: {\n      increment: 1024, addSuffix: true, suffix: 'i',\n    },\n    needParseSi: false\n  },\n};\n\nexport const DURATION = {\n  name:      'duration',\n  labelKey:  'tableHeaders.duration',\n  value:     'duration.value',\n  sort:      'duration.seconds',\n  formatter: 'LiveDuration',\n};\n\nexport const IMAGE_NAME = {\n  name:      'image',\n  labelKey:  'tableHeaders.image',\n  value:     'image',\n  sort:      ['image', 'nameSort'],\n  formatter: 'ImageName',\n};\n\nexport const POD_IMAGES = {\n  name:      'pod_images',\n  labelKey:  'tableHeaders.podImages',\n  value:     'imageNames',\n  getValue:  (row) => row.imageNames,\n  sort:      'imageNames',\n  // search:    'imageNames',\n  formatter: 'PodImages'\n};\n\nexport const POD_RESTARTS = {\n  name:         'pod_restarts',\n  labelKey:     'tableHeaders.podRestarts',\n  formatter:    'LivePodRestarts',\n  delayLoading: true,\n  value:        'restartCount',\n  getValue:     (row) => row.restartCount,\n  // This column is expensive to compute, so don't make it searchable\n  search:       false,\n  liveUpdates:  true\n};\n\nexport const SCALE = {\n  name:      'scale',\n  labelKey:  'tableHeaders.scale',\n  value:     'scales.desired',\n  sort:      ['scales.desired', 'nameSort'],\n  formatter: 'Scale',\n  width:     60,\n  align:     'center',\n};\n\nexport const SIMPLE_SCALE = {\n  name:     'simple-scale',\n  labelKey: 'tableHeaders.simpleScale',\n  value:    'scale',\n  sort:     ['scale']\n};\n\nexport const SUCCESS = {\n  name:     'success',\n  labelKey: 'tableHeaders.success',\n  value:    'success',\n  width:    100,\n  align:    'right',\n};\n\nexport const REQ_RATE = {\n  name:     'req-rate',\n  labelKey: 'tableHeaders.reqRate',\n  value:    'rps',\n  width:    100,\n  align:    'right',\n};\n\nexport const P95 = {\n  name:     'p95',\n  labelKey: 'tableHeaders.p95',\n  value:    'p95',\n  width:    100,\n  align:    'right',\n};\n\nexport const KEYS = {\n  name:     'keys',\n  labelKey: 'tableHeaders.keys',\n  sort:     false,\n  value:    'keysDisplay',\n};\n\nexport const SECRET_DATA = {\n  name:      'data',\n  labelKey:  'tableHeaders.data',\n  value:     'dataPreview',\n  formatter: 'SecretData'\n};\n\nexport const SECRET_CLONE = {\n  name:      'secret-clone',\n  labelKey:  'tableHeaders.secret.project-clone',\n  tooltip:   'tableHeaders.secret.project-clone-tooltip',\n  value:     'isProjectSecretCopy',\n  sort:      `metadata.annotations.\"${ UI_PROJECT_SECRET_COPY }\"`,\n  search:    false,\n  formatter: 'Checked',\n};\n\nexport const SECRET_PROJECT_SCOPED = {\n  name:     'secret-project-scoped',\n  labelKey: 'tableHeaders.secret.project-scoped',\n  tooltip:  'tableHeaders.secret.project-scoped-tooltip',\n  value:    'clusterAndProjectLabel',\n  // Cannot _sort_ upstream secrets by if they are cluster scoped\n  // https://github.com/rancher/rancher/issues/51001\n  // metadata.labels[management.cattle.io/project-scoped-secret] - covers both cluster scoped AND clones\n  // metadata.annotations[management.cattle.io/project-scoped-secret-copy]\n  // sort:     [`metadata.labels[${ UI_PROJECT_SECRET }]`, `metadata.annotations[${ UI_PROJECT_SECRET_COPY }]`],\n  search:   false,\n};\n\nexport const TARGET_KIND = {\n  name:     'target-kind',\n  labelKey: 'tableHeaders.targetKind',\n  value:    'kindDisplay',\n  width:    100,\n};\n\nexport const TARGET = {\n  name:     'target',\n  labelKey: 'tableHeaders.target',\n  value:    'targetDisplay',\n};\n\nexport const USERNAME = {\n  name:        'username',\n  labelKey:    'tableHeaders.username',\n  value:       'username',\n  dashIfEmpty: true,\n  sort:        'username',\n};\n\nexport const USER_DISPLAY_NAME = {\n  name:        'name',\n  labelKey:    'tableHeaders.name',\n  value:       'nameDisplay',\n  sort:        ['nameSort'],\n  dashIfEmpty: true,\n};\n\nexport const USER_PROVIDER = {\n  name:        'provider',\n  labelKey:    'tableHeaders.provider',\n  value:       'providerDisplay',\n  dashIfEmpty: true,\n  sort:        'providerDisplay',\n};\n\nexport const USER_LAST_LOGIN = {\n  name:          'user-last-login',\n  labelKey:      'tableHeaders.userLastLogin',\n  value:         'userLastLogin',\n  formatter:     'LiveDate',\n  formatterOpts: { addSuffix: true },\n  sort:          'userLastLogin',\n};\n\nexport const USER_DISABLED_IN = {\n  name:          'user-disabled-in',\n  labelKey:      'tableHeaders.userDisabledIn',\n  value:         'userDisabledInDisplay',\n  formatter:     'LiveDate',\n  formatterOpts: { isCountdown: true },\n  sort:          'userDisabledIn',\n};\n\nexport const USER_DELETED_IN = {\n  name:          'user-deleted-in',\n  labelKey:      'tableHeaders.userDeletedIn',\n  value:         'userDeletedIn',\n  formatter:     'LiveDate',\n  formatterOpts: { isCountdown: true },\n  sort:          'userDeletedIn',\n};\n\nexport const USER_ID = {\n  name:          'user-id',\n  labelKey:      'tableHeaders.userId',\n  value:         'id',\n  formatter:     'LinkDetail',\n  canBeVariable: true,\n  sort:          'id',\n};\n\nexport const ADDRESS = {\n  name:     'address',\n  labelKey: 'tableHeaders.address',\n  value:    'address',\n  sort:     ['address'],\n};\n\nexport const SIMPLE_TYPE = {\n  name:     'type',\n  labelKey: 'tableHeaders.simpleType',\n  value:    'type',\n  sort:     ['type'],\n  width:    175,\n};\n\nexport const IMAGE_SIZE = {\n  name:      'sizeBytes',\n  labelKey:  'tableHeaders.imageSize',\n  value:     'sizeBytes',\n  sort:      ['sizeBytes'],\n  formatter: 'Si'\n};\n\nexport const TYPE = {\n  name:     'type',\n  labelKey: 'tableHeaders.type',\n  value:    'typeDisplay',\n  getValue: (row) => row.typeDisplay,\n  sort:     ['typeDisplay'],\n  width:    100,\n};\n\nexport const SUB_TYPE = {\n  name:     'subType',\n  labelKey: 'tableHeaders.subType',\n  value:    'subTypeDisplay',\n  sort:     ['subTypeDisplay'],\n  width:    120,\n};\n\nexport const EVENT_TYPE = {\n  name:     'type',\n  labelKey: 'tableHeaders.type',\n  value:    'eventType',\n  sort:     'eventType',\n};\n\nexport const STATUS = {\n  name:     'status',\n  labelKey: 'tableHeaders.status',\n  value:    'status',\n  sort:     ['status'],\n  width:    175\n};\nexport const LAST_SEEN_TIME = {\n  name:     'lastSeen',\n  labelKey: 'tableHeaders.lastSeen',\n  value:    'lastSeen',\n  sort:     'lastTimestamp:desc',\n  tooltip:  'tableHeaders.lastSeenTooltip'\n};\n\nexport const EVENT_FIRST_SEEN_TIME = {\n  name:     'firstSeen',\n  labelKey: 'tableHeaders.firstSeen',\n  tooltip:  'tableHeaders.firstSeenTooltip',\n\n  value: 'firstSeen',\n  sort:  'firstSeen:desc',\n};\n\nexport const EVENT_LAST_SEEN_TIME = {\n  ...LAST_SEEN_TIME,\n  defaultSort: true,\n};\n\nexport const LAST_HEARTBEAT_TIME = {\n  name:      'lastHeartbeatTime',\n  labelKey:  'tableHeaders.lastSeen',\n  value:     'lastHeartbeatTime',\n  sort:      ['lastHeartbeatTime'],\n  formatter: 'LiveDate',\n  width:     175\n};\nexport const REASON = {\n  name:     'reason',\n  labelKey: 'tableHeaders.reason',\n  value:    'reason',\n  sort:     ['reason']\n};\nexport const OBJECT = {\n  name:          'object',\n  labelKey:      'tableHeaders.object',\n  value:         'involvedObject',\n  sort:          ['involvedObject.kind', 'involvedObject.name'],\n  canBeVariable: true,\n  formatter:     'InvolvedObjectLink',\n};\nexport const RECLAIM_POLICY = {\n  name:     'reclaimPolicy',\n  labelKey: 'tableHeaders.reclaimPolicy',\n  value:    'spec.persistentVolumeReclaimPolicy',\n  sort:     ['spec.persistentVolumeReclaimPolicy']\n};\nexport const PV_REASON = {\n  name:     'pvReason',\n  labelKey: 'tableHeaders.reason',\n  value:    'status.reason',\n  sort:     ['status.reason']\n};\n\nexport const MESSAGE = {\n  name:     'message',\n  labelKey: 'tableHeaders.message',\n  value:    'message',\n  sort:     ['message']\n};\nexport const KEY = {\n  name:     'key',\n  labelKey: 'tableHeaders.key',\n  value:    'key',\n  sort:     ['key']\n};\nexport const VALUE = {\n  name:     'value',\n  labelKey: 'tableHeaders.value',\n  value:    'value',\n  sort:     ['value'],\n};\n\nexport const BUILT_IN = {\n  name:      'builtIn',\n  labelKey:  'tableHeaders.builtIn',\n  value:     'builtIn',\n  sort:      ['builtIn'],\n  align:     'center',\n  formatter: 'IconIsDefault'\n};\n\nexport const CLUSTER_CREATOR_DEFAULT = {\n  name:      'default',\n  labelKey:  'tableHeaders.clusterCreatorDefault',\n  value:     'default',\n  sort:      ['Default'],\n  align:     'center',\n  formatter: 'IconIsDefault'\n};\n\nexport const RBAC_DEFAULT = {\n  name:      'default',\n  labelKey:  'tableHeaders.default',\n  value:     'default',\n  formatter: 'Checked',\n  sort:      ['default']\n};\n\nexport const RBAC_BUILTIN = {\n  name:      'builtin',\n  labelKey:  'tableHeaders.builtin',\n  value:     'builtin',\n  formatter: 'Checked',\n  sort:      ['builtin']\n};\n\nexport const RESOURCE = {\n  name:     'resource',\n  labelKey: 'tableHeaders.resource',\n  value:    'resource',\n  sort:     ['resourceNames']\n};\n\nexport const API_GROUP = {\n  name:     'apigroups',\n  labelKey: 'tableHeaders.apiGroup',\n  value:    'apiGroups',\n  sort:     ['apiGroups']\n};\n\nexport const INGRESS_CLASS = {\n  name:     'ingressClassName',\n  labelKey: 'tableHeaders.ingressClass',\n  value:    `$['spec']['ingressClassName']`,\n  sort:     `$['spec']['ingressClassName']`,\n};\n\nexport const INGRESS_DEFAULT_BACKEND = {\n  name:      'ingressDefaultBackend',\n  labelKey:  'tableHeaders.ingressDefaultBackend',\n  value:     'hasDefaultBackend',\n  sort:      ['hasDefaultBackend:desc'],\n  formatter: 'Checked',\n  width:     75,\n  align:     'center'\n};\n\nexport const INGRESS_TARGET = {\n  name:      'ingressTarget',\n  labelKey:  'tableHeaders.ingressTarget',\n  value:     \"$['spec']\",\n  formatter: 'IngressTarget',\n  sort:      \"$['spec']['rules'][0].host\",\n};\n\nexport const SPEC_TYPE = {\n  name:      'type',\n  labelKey:  'tableHeaders.type',\n  value:     `$['spec']['type']`,\n  sort:      `$['spec']['type']`,\n  formatter: 'ServiceType',\n};\n\nexport const TARGET_PORT = {\n  formatter: 'ServiceTargets',\n  labelKey:  'tableHeaders.targetPort',\n  name:      'targetPort',\n  sort:      false,\n  value:     false,\n};\n\nexport const SELECTOR = {\n  formatter: 'KeyValue',\n  name:      'selector',\n  labelKey:  'tableHeaders.selector',\n  value:     `$['spec']['selector']`,\n  sort:      `$['spec']['selector']`,\n};\n\nexport const CHART = {\n  name:     'chart',\n  labelKey: 'tableHeaders.chart',\n  value:    'chartDisplay',\n  sort:     ['chartDisplay', 'versionSort'],\n};\n\nexport const CHART_UPGRADE = {\n  name:        'upgrade',\n  labelKey:    'tableHeaders.upgrade',\n  value:       'upgradeAvailable',\n  sort:        'upgradeAvailableSort:desc',\n  dashIfEmpty: true,\n};\n\nexport const RESOURCES = {\n  name:     'resources',\n  labelKey: 'tableHeaders.resources',\n  value:    'spec.resources.length',\n  sort:     'spec.resources.length',\n  width:    100,\n};\n\nexport const URL = {\n  name:     'url',\n  labelKey: 'tableHeaders.url',\n  value:    'spec.url',\n  sort:     'spec.url',\n};\n\nexport const LAST_UPDATED = {\n  name:          'lastUpdated',\n  labelKey:      'tableHeaders.lastUpdated',\n  value:         'lastTransitionTime',\n  formatter:     'LiveDate',\n  formatterOpts: { addSuffix: true },\n  sort:          ['lastTransitionTime']\n};\n\nexport const WORKSPACE = {\n  name:  'workspace',\n  label: 'Workspace',\n  value: 'metadata.namespace',\n  sort:  ['metadata.namespace', 'nameSort'],\n};\n\nexport const WORKLOAD_IMAGES = {\n  ...POD_IMAGES,\n  value:      '',\n  breakpoint: COLUMN_BREAKPOINTS.LAPTOP\n};\n\nexport const WORKLOAD_ENDPOINTS = {\n  name:        'workloadEndpoints',\n  labelKey:    'tableHeaders.endpoints',\n  value:       `$['metadata']['annotations']['${ CATTLE_PUBLIC_ENDPOINTS }']`,\n  getValue:    (row) => row.metadata?.annotations?.[CATTLE_PUBLIC_ENDPOINTS],\n  formatter:   'Endpoints',\n  dashIfEmpty: true,\n  breakpoint:  COLUMN_BREAKPOINTS.DESKTOP,\n  maxPageSize: 25, // Hide this column when the page size is bigger than 25\n};\n\nexport const WORKLOAD_HEALTH_SCALE = {\n  name:         'workloadHealthScale',\n  labelKey:     'tableHeaders.health',\n  formatter:    'WorkloadHealthScale',\n  getValue:     () => undefined,\n  width:        150,\n  skipSelect:   true,\n  delayLoading: true,\n  // This column is expensive to compute, so don't make it searchable\n  search:       false,\n  liveUpdates:  true,\n};\n\nexport const FLEET_SUMMARY = {\n  name:      'summary',\n  labelKey:  'tableHeaders.resources',\n  value:     'status.resourceCounts',\n  sort:      false,\n  search:    false,\n  formatter: 'FleetSummaryGraph',\n  align:     'center',\n  width:     100,\n};\n\nexport const FLEET_APPLICATION_TYPE = {\n  name:     'applicationType',\n  labelKey: 'fleet.tableHeaders.applicationType',\n  value:    'kind',\n  sort:     'kind',\n  search:   false,\n  align:    'center',\n  width:    100,\n};\n\nexport const FLEET_APPLICATION_SOURCE = {\n  name:      'applicationSource',\n  labelKey:  'fleet.tableHeaders.applicationSource',\n  value:     'source.value',\n  formatter: 'FleetApplicationSource',\n  sort:      'source.value',\n  search:    ['source.value', 'sourceSub.value'],\n};\n\nexport const FLEET_APPLICATION_TARGET = {\n  name:     'applicationTarget',\n  labelKey: 'fleet.tableHeaders.applicationTarget',\n  value:    'targetInfo.modeDisplay',\n  sort:     ['targetInfo.modeDisplay'],\n};\n\nexport const FLEET_APPLICATION_CLUSTERS_READY = {\n  name:      'applicationClustersReady',\n  labelKey:  'fleet.tableHeaders.applicationClustersReady',\n  value:     'readyClusters',\n  formatter: 'FleetApplicationClustersReady',\n  sort:      'readyClusters',\n  search:    false,\n};\n\nexport const FLEET_APPLICATION_RESOURCES_SUMMARY = {\n  name:      'applicationResourcesSummary',\n  labelKey:  'fleet.tableHeaders.applicationResourcesSummary',\n  value:     'status.resourceCounts',\n  sort:      false,\n  search:    false,\n  formatter: 'FleetSummaryGraph',\n  align:     'center',\n  width:     100,\n};\n\nexport const FLEET_REPO_CLUSTER_SUMMARY = {\n  name:      'clusterSummary',\n  labelKey:  'tableHeaders.clusterResources',\n  value:     'status.resourceCounts',\n  sort:      false,\n  search:    false,\n  formatter: 'FleetClusterSummaryGraph',\n  align:     'center',\n  width:     100,\n};\n\nexport const FLEET_REPO_PER_CLUSTER_STATE = {\n  name:          'perClusterState',\n  labelKey:      'tableHeaders.repoPerClusterState',\n  tooltip:       'tableHeaders.repoPerClusterStateTooltip',\n  sort:          ['stateSort', 'nameSort'],\n  width:         100,\n  default:       'unknown',\n  formatter:     'BadgeStateFormatter',\n  formatterOpts: { arbitrary: true }\n\n};\n\nexport const APP_SUMMARY = {\n  name:      'summary',\n  labelKey:  'tableHeaders.resources',\n  value:     'deployedResources.length',\n  sort:      false,\n  search:    false,\n  formatter: 'AppSummaryGraph',\n  align:     'center',\n  width:     100,\n};\n\nexport const CONSTRAINT_VIOLATION_CONSTRAINT_LINK = {\n  name:          'Constraint',\n  labelKey:      'tableHeaders.constraint',\n  value:         'constraintLink',\n  sort:          `constraintLink.text`,\n  formatter:     'Link',\n  formatterOpts: { options: { internal: true } },\n};\n\nexport const CONSTRAINT_VIOLATION_RESOURCE_LINK = {\n  name:          'Name',\n  labelKey:      'tableHeaders.name',\n  value:         'resourceLink',\n  sort:          `resourceLink.text`,\n  search:        `resourceLink.text`,\n  formatter:     'Link',\n  formatterOpts: { options: { internal: true } },\n};\n\nexport const CONSTRAINT_VIOLATION_TYPE = {\n  name:     'Type',\n  labelKey: 'tableHeaders.type',\n  value:    `kind`,\n  sort:     `kind`\n};\n\nexport const CONSTRAINT_VIOLATION_NAMESPACE = {\n  name:     'Namespace',\n  labelKey: 'tableHeaders.namespace',\n  value:    `namespace`,\n  sort:     `namespace`,\n  search:   `namespace`,\n};\n\nexport const CONSTRAINT_VIOLATION_MESSAGE = {\n  name:     'Message',\n  labelKey: 'tableHeaders.message',\n  value:    `message`,\n  sort:     `message`\n};\n\nexport const CONSTRAINT_VIOLATION_TEMPLATE_LINK = {\n  name:          'TemplateLink',\n  labelKey:      'tableHeaders.template',\n  value:         `templateLink`,\n  sort:          `templateLink.text`,\n  formatter:     'Link',\n  formatterOpts: { options: { internal: true } },\n};\n\nexport const CONSTRAINT_VIOLATION_COUNT = {\n  name:          'Count',\n  labelKey:      'tableHeaders.count',\n  value:         `count`,\n  sort:          `count`,\n  formatter:     'QualityText',\n  formatterOpts: {\n    qualityFn(value) {\n      if (value <= 10) {\n        return 'success';\n      }\n\n      if (value <= 20) {\n        return 'warning';\n      }\n\n      return 'error';\n    }\n  }\n};\n\nexport const RECEIVER_PROVIDERS = {\n  name:      'receiver-providers',\n  label:     'Configured Providers',\n  value:     'receiverTypes',\n  sort:      'receiverTypes',\n  formatter: 'List',\n};\n\nexport const CONFIGURED_RECEIVER = {\n  name:          'receiver',\n  label:         'Configured Receiver',\n  value:         'receiverLink',\n  sort:          'receiverLink.text',\n  formatter:     'Link',\n  formatterOpts: { options: { internal: true } },\n};\n\nexport const GROUP_NAME = {\n  name:      'group-name',\n  labelKey:  'tableHeaders.groupName',\n  value:     'id',\n  sort:      ['name'],\n  search:    ['name'],\n  formatter: 'Principal',\n  width:     350\n};\n\nexport const GROUP_ROLE_NAME = {\n  name:      'group-role-names',\n  labelKey:  'tableHeaders.groupRoleNames',\n  value:     'id',\n  formatter: 'PrincipalGroupBindings',\n};\n\nexport const HPA_REFERENCE = {\n  name:     'reference',\n  labelKey: 'tableHeaders.hpaReference',\n  value:    'spec.scaleTargetRef.name',\n  sort:     'spec.scaleTargetRef.name',\n};\n\nexport const MIN_REPLICA = {\n  name:     'minimum-replica',\n  labelKey: 'tableHeaders.minReplicas',\n  value:    'spec.minReplicas',\n  sort:     'spec.minReplicas',\n};\n\nexport const MAX_REPLICA = {\n  name:     'maximum-replica',\n  labelKey: 'tableHeaders.maxReplicas',\n  value:    'spec.maxReplicas',\n  sort:     'spec.maxReplicas',\n};\n\nexport const CURRENT_REPLICA = {\n  name:     'current-replica',\n  labelKey: 'tableHeaders.currentReplicas',\n  value:    'status.currentReplicas',\n  sort:     'status.currentReplicas',\n};\n\nexport const EXPIRY_STATE = {\n  ...STATE,\n  value:     '$',\n  formatter: 'LiveExpiryBadgeState',\n};\n\nexport const ACCESS_KEY = {\n  name:     'id',\n  labelKey: 'tableHeaders.accessKey',\n  align:    'left',\n  sort:     ['name'],\n  width:    200,\n};\n\nexport const SCOPE = {\n  name:        'scope',\n  value:       'clusterName',\n  labelKey:    'tableHeaders.scope',\n  dashIfEmpty: true,\n  align:       'left',\n  sort:        ['scope'],\n  width:       100,\n};\n\nexport const SCOPE_NORMAN = {\n  ...SCOPE,\n  value: 'clusterId',\n  sort:  ['clusterId'],\n};\n\nexport const EXPIRES = {\n  name:      'expires',\n  value:     'expiresAt',\n  labelKey:  'tableHeaders.expires',\n  align:     'left',\n  sort:      ['expiresAt'],\n  width:     200,\n  formatter: 'LiveExpiryDate'\n};\n\nexport const LAST_USED = {\n  name:          'lastUsed',\n  value:         'lastUsedAt',\n  labelKey:      'tableHeaders.lastUsed',\n  align:         'left',\n  sort:          ['lastUsedAt'],\n  width:         200,\n  formatter:     'LiveExpiryDate',\n  formatterOpts: { missingKey: 'generic.unknown' },\n};\n\nexport const RESTART = {\n  name:      'restart',\n  labelKey:  'tableHeaders.restart',\n  value:     'restartRequired',\n  sort:      ['restartRequired', 'nameSort'],\n  formatter: 'Checked',\n  width:     125,\n  align:     'center'\n};\n\nexport const ROLE = {\n  name:     'role',\n  value:    'roleDisplay',\n  labelKey: 'tableHeaders.role',\n};\n\nexport const FEATURE_DESCRIPTION = {\n  name:          'description',\n  labelKey:      'tableHeaders.description',\n  value:         'status.description',\n  align:         'left',\n  sort:          ['status.description'],\n  formatter:     'Translate',\n  formatterOpts: { prefix: 'featureFlags.description' },\n};\n\nexport const STATE_NORMAN = {\n  name:      'state',\n  labelKey:  'tableHeaders.state',\n  sort:      ['stateSort', 'nameSort'],\n  value:     'stateDisplay',\n  width:     100,\n  default:   'unknown',\n  formatter: 'BadgeStateFormatter',\n};\n\nexport const KUBE_NODE_OS = {\n  name:      'operating-system',\n  labelKey:  'tableHeaders.operatingSystem',\n  value:     'status.nodeInfo.operatingSystem',\n  sort:      ['status.nodeInfo.operatingSystem'],\n  formatter: 'Capitalize'\n};\n\nexport const MACHINE_NODE_OS = {\n  name:        'operating-system',\n  labelKey:    'tableHeaders.operatingSystem',\n  value:       'operatingSystem',\n  sort:        ['operatingSystem'],\n  formatter:   'Capitalize',\n  dashIfEmpty: true,\n};\n\nexport const MANAGEMENT_NODE_OS = {\n  name:        'operating-system',\n  labelKey:    'tableHeaders.operatingSystem',\n  value:       'status.internalNodeStatus.nodeInfo.operatingSystem',\n  sort:        ['status.internalNodeStatus.nodeInfo.operatingSystem'],\n  formatter:   'Capitalize',\n  dashIfEmpty: true,\n};\n\n// FLEET\n\nexport const FLEET_BUNDLE_LAST_UPDATED = {\n  name:          'lastUpdated',\n  labelKey:      'tableHeaders.lastUpdated',\n  value:         'lastUpdateTime',\n  formatter:     'LiveDate',\n  formatterOpts: { addSuffix: true },\n  sort:          ['lastUpdateTime']\n};\n\nexport const FLEET_REPO_TARGET = {\n  name:     'target',\n  labelKey: 'tableHeaders.target',\n  value:    'targetInfo.modeDisplay',\n  sort:     ['targetInfo.modeDisplay'],\n};\n\nexport const FLEET_REPO = {\n  name:      'repo',\n  labelKey:  'tableHeaders.repo',\n  value:     'source.value',\n  formatter: 'FleetApplicationSource',\n  sort:      'source.value',\n  search:    ['source.value', 'sourceSub.value'],\n};\n\nexport const UI_PLUGIN_CATALOG = [\n  {\n    name:          'state',\n    labelKey:      'tableHeaders.state',\n    sort:          ['stateSort', 'nameSort'],\n    value:         'state',\n    width:         100,\n    default:       'unknown',\n    formatter:     'BadgeStateFormatter',\n    formatterOpts: { arbitrary: true }\n  },\n  {\n    name:      'name',\n    labelKey:  'tableHeaders.name',\n    value:     'name',\n    sort:      ['nameSort'],\n    formatter: 'LinkDetail'\n  },\n  {\n    name:     'image',\n    sort:     ['image'],\n    labelKey: 'plugins.manageCatalog.headers.image.label',\n    value:    'image'\n  },\n  {\n    name:     'repository',\n    sort:     ['repository'],\n    labelKey: 'plugins.manageCatalog.headers.repository.label',\n    value:    'repo.metadata.name'\n  }\n];\n\n// SECRETS\nexport const PROJECT = {\n  name:     'project',\n  labelKey: 'tableHeaders.project',\n};\n","import { UI_PROJECT_SECRET_COPY } from '@shell/config/labels-annotations';\nimport {\n  STATE, NAME as NAME_COL, NAMESPACE as NAMESPACE_COL, AGE, OBJECT,\n  EVENT_LAST_SEEN_TIME,\n  EVENT_TYPE,\n  SECRET_CLONE,\n  EVENT_FIRST_SEEN_TIME\n} from '@shell/config/table-headers';\n\n// This file contains table headers\n// These table headers are used for server side pagination\n// They MUST contain sort and search values that are paths to raw properties (not computed properties in models)\n// They SHOULD avoid formatters that change the value from the same used by sort and search (user will see an order that doesn't match what they see)\n\nexport const STEVE_NAME_COL = {\n  ...NAME_COL,\n  defaultSort: true,\n  value:       'metadata.name',\n  sort:        ['metadata.name'],\n  search:      'metadata.name',\n};\n\nexport const STEVE_ID_COL = {\n  name:     'steve-id',\n  labelKey: 'tableHeaders.id',\n  value:    'id',\n  sort:     ['id'],\n  search:   'id',\n};\n\nexport const STEVE_STATE_COL = {\n  ...STATE,\n  // Note, we're show the 'state' as per model, not the 'metadata.state.name' that's available in the model to remotely sort/filter\n  // Need to investigate whether we should 'dumb down' the state we show to the native one (tracked via https://github.com/rancher/dashboard/issues/8527)\n  // This means we'll show something different to what we sort and filter on.\n  sort:   ['metadata.state.name'],\n  search: 'metadata.state.name',\n};\n\nexport const STEVE_AGE_COL = {\n  ...AGE,\n  value:  'metadata.creationTimestamp',\n  sort:   'metadata.creationTimestamp',\n  search: false,\n};\n\nexport const STEVE_NAMESPACE_COL = {\n  ...NAMESPACE_COL,\n  value:  'metadata.namespace',\n  sort:   'metadata.namespace',\n  search: 'metadata.namespace',\n};\n\nexport const STEVE_EVENT_OBJECT = {\n  ...OBJECT,\n  sort:   'involvedObject.kind',\n  search: 'involvedObject.kind',\n};\n\nexport const STEVE_EVENT_FIRST_SEEN = {\n  ...EVENT_FIRST_SEEN_TIME,\n\n  value: 'metadata.fields.7',\n  sort:  'metadata.fields.7:desc',\n};\n\nexport const STEVE_EVENT_LAST_SEEN = {\n  ...EVENT_LAST_SEEN_TIME,\n  value: 'metadata.fields.0',\n  sort:  'metadata.fields.0:desc',\n};\n\nexport const STEVE_EVENT_TYPE = {\n  ...EVENT_TYPE,\n  value: '_type',\n  sort:  '_type',\n};\n\nexport const STEVE_LIST_GROUPS = [{\n  tooltipKey: 'resourceTable.groupBy.none',\n  icon:       'icon-list-flat',\n  value:      'none',\n}, {\n  icon:          'icon-folder',\n  value:         'metadata.namespace',\n  field:         'metadata.namespace', // Default groupByLabel field in models is NS based\n  hideColumn:    NAMESPACE_COL.name,\n  tooltipKey:    'resourceTable.groupBy.namespace',\n  groupLabelKey: 'groupByLabel',\n}];\n\nexport const STEVE_SECRET_CLONE = {\n  ...SECRET_CLONE,\n  sort: `metadata.annotations[${ UI_PROJECT_SECRET_COPY }]`,\n};\n","import { STEVE_AGE_COL, STEVE_NAME_COL, STEVE_NAMESPACE_COL, STEVE_STATE_COL } from '@rancher/shell/config/pagination-table-headers';\nimport { STATE, NAME as NAME_COL, AGE } from '@shell/config/table-headers';\nimport { UI_PLUGIN } from '@shell/config/types';\n\nexport const EXPLORER = 'explorer';\n\nexport function init(plugin, store) {\n  const {\n    basicType,\n    headers,\n    mapGroup,\n  } = plugin.DSL(store, EXPLORER);\n\n  mapGroup('plugins', 'Extensions');\n\n  basicType([\n    UI_PLUGIN,\n  ], 'plugins');\n\n  headers(UI_PLUGIN,\n  // Columns to show when server-side pagination is DISABLED\n  [\n    STATE,\n    NAME_COL,\n    {\n      name:     'version',\n      label:    'Version',\n      getValue: row => row.version, // This is a locally computed property via a getter on the resource's model in rancher/dashboard shell/models/catalog.cattle.io.uiplugin.js\n      sort:     'version',\n      search:   'version',\n    },\n    {\n      name:     'cacheState',\n      label:    'Cache State',\n      getValue: row => row.status?.cacheState,\n      sort:     'status.cacheState',\n      search:   'status.cacheState',\n    },\n    AGE,\n  ],\n  // Columns to show when server-side pagination is ENABLED\n  // Note - these provide paths to properties that...\n  // 1. Exist in the resource itself and are not calculated locally in a resource model in the browser\n  // 2. The properties have been indexed\n  [\n    STEVE_STATE_COL,\n    STEVE_NAME_COL,\n    STEVE_NAMESPACE_COL,\n    {\n      name:   'version',\n      label:  'Version',\n      value:  'metadata.fields.2', // metadata.fields are automatically indexed\n      sort:   false, // should be 'metadata.fields.2', but currently broken https://github.com/rancher/rancher/issues/52121\n      search: false, // should be 'metadata.fields.2', but currently broken https://github.com/rancher/rancher/issues/52121\n    },\n    {\n      name:   'cacheState',\n      label:  'Cache State',\n      value:  'metadata.fields.3', // metadata.fields are automatically indexed\n      sort:   false, // should be 'metadata.fields.2', but currently broken https://github.com/rancher/rancher/issues/52121\n      search: false, // should be 'metadata.fields.2', but currently broken https://github.com/rancher/rancher/issues/52121\n    },\n    STEVE_AGE_COL,\n  ]);\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__274__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"extension-crd-0.2.5.umd.min.\" + \"detail\" + \".js\";\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"extension-crd-0.2.5:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t546: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = (typeof self !== 'undefined' ? self : this)[\"webpackChunkextension_crd_0_2_5\"] = (typeof self !== 'undefined' ? self : this)[\"webpackChunkextension_crd_0_2_5\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","/* eslint-disable no-var */\n// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  var currentScript = window.document.currentScript\n  if (process.env.NEED_CURRENTSCRIPT_POLYFILL) {\n    var getCurrentScript = require('@soda/get-current-script')\n    currentScript = getCurrentScript()\n\n    // for backward compatibility, because previously we directly included the polyfill\n    if (!('currentScript' in document)) {\n      Object.defineProperty(document, 'currentScript', { get: getCurrentScript })\n    }\n  }\n\n  var src = currentScript && currentScript.src.match(/(.+\\/)[^/]+\\.js(\\?.*)?$/)\n  if (src) {\n    __webpack_public_path__ = src[1] // eslint-disable-line\n  }\n}\n\n// Indicate to webpack that this file can be concatenated\nexport default null\n","export function importTypes($plugin) { \n  $plugin.register('detail', 'catalog.cattle.io.uiplugin', () => import(/* webpackChunkName: \"detail\" */'@pkg/detail/catalog.cattle.io.uiplugin.vue'));\n};\n","import { importTypes } from '@rancher/auto-import';\nimport { UI_PLUGIN } from '@shell/config/types';\nimport { IPlugin } from '@shell/core/types';\n\n// Init the package\nexport default function(plugin: IPlugin) {\n  // Auto-import model, detail, edit from the folders\n  importTypes(plugin);\n\n  // Provide plugin metadata from package.json\n  plugin.metadata = require('./package.json');\n\n  // Load a product\n  plugin.addProduct(require('./product'));\n\n  // Ensure that the `catalog.cattle.io.uiplugin` list uses server-side pagination\n  plugin.enableServerSidePagination?.({\n    cluster: {\n      resources: {\n        enableSome: {\n          enabled: [UI_PLUGIN],\n        }\n      }\n    }\n  })\n}\n","import './setPublicPath'\nimport mod from '~entry'\nexport default mod\nexport * from '~entry'\n"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__274__","NODE","POD","WORKLOAD_TYPES","DEPLOYMENT","CRON_JOB","DAEMON_SET","JOB","STATEFUL_SET","REPLICA_SET","REPLICATION_CONTROLLER","scalableWorkloads","UI_PLUGIN","CATTLE_PUBLIC_ENDPOINTS","UI_PROJECT_SECRET_COPY","COLUMN_BREAKPOINTS","TABLET","LAPTOP","DESKTOP","STATE","name","labelKey","sort","value","getValue","row","stateDisplay","width","default","formatter","NAME","nameDisplay","canBeVariable","OUTPUT","formatterOpts","options","internal","NAMESPACE","namespace","dashIfEmpty","AGE","NODE_TYPE","creationTimestamp","search","align","POD_IMAGES","imageNames","SECRET_CLONE","tooltip","EVENT_TYPE","LAST_SEEN_TIME","EVENT_FIRST_SEEN_TIME","EVENT_LAST_SEEN_TIME","defaultSort","OBJECT","SCOPE","STEVE_NAME_COL","NAME_COL","STEVE_STATE_COL","STEVE_AGE_COL","STEVE_NAMESPACE_COL","NAMESPACE_COL","EXPLORER","init","plugin","store","basicType","headers","mapGroup","DSL","label","version","status","cacheState","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","f","e","chunkId","Promise","all","keys","reduce","promises","u","obj","prop","prototype","hasOwnProperty","call","inProgress","dataWebpackPrefix","l","url","done","push","script","needAttach","scripts","document","getElementsByTagName","i","length","s","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","forEach","fn","setTimeout","bind","type","target","head","appendChild","r","Symbol","toStringTag","p","installedChunks","j","installedChunkData","promise","resolve","reject","error","Error","loadingEnded","errorType","realSrc","message","request","webpackJsonpCallback","parentChunkLoadingFunction","data","chunkIds","moreModules","runtime","some","id","chunkLoadingGlobal","window","currentScript","match","importTypes","$plugin","register","metadata","addProduct","enableServerSidePagination","cluster","resources","enableSome","enabled"],"sourceRoot":""}